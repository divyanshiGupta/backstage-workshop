ingress:
  # -- Enable the creation of the ingress resource
  enabled: true

  # -- Name of the IngressClass cluster resource which defines which controller will implement the resource (e.g nginx)
  className: ""

  # -- Additional annotations for the Ingress resource
  annotations: {}

  # -- Hostname to be used to expose the route to access the backstage application (e.g: backstage.IP.nip.io)
  host: "backstage.localhost.io"

  # -- Ingress TLS parameters
  tls:
    # -- Enable TLS configuration for the host defined at `ingress.host` parameter
    enabled: false

    # -- The name to which the TLS Secret will be called
    secretName: ""

backstage:
  # -- Number of deployment replicas
  replicas: 1

  # -- Define the [count of deployment revisions](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy) to be kept.
  # May be set to 0 in case of GitOps deployment approach.
  revisionHistoryLimit: 10

  image:
    registry: quay.io

    repository: janus-idp/backstage-showcase

    tag: latest

    # -- Specify a imagePullPolicy.
    # Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    # <br /> Ref: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    pullPolicy: Always

    # -- Optionally specify an array of imagePullSecrets.
    #  Secrets must be manually created in the namespace.
    # <br /> Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    # <br /> E.g: `pullSecrets: [myRegistryKeySecretName]`
    pullSecrets: []

    # -- Set to true if you would like to see extra information on logs
    debug: true

  # -- Container ports on the Deployment
  containerPorts:
    backend: 7007

  # -- Backstage container command
  command: ["node", "packages/backend"]

  # -- Backstage container command arguments
  args: []

  # -- Extra app configuration files to inline into command arguments
  extraAppConfig:
    - filename: app-config.extra.yaml
      configMapRef: my-app-config

  # -- Deployment sidecars
  extraContainers: []

  # -- Backstage container environment variables
  extraEnvVars: []

  # -- Backstage container environment variables from Secrets
  extraEnvVarsSecrets:
    - my-backstage-secrets

  # -- Backstage container additional volume mounts
  extraVolumeMounts: []

  # -- Backstage container additional volumes
  extraVolumes: []

  # -- Backstage container init containers
  initContainers: []

  # -- Directory containing the backstage installation
  installDir: /app

# -- PostgreSQL [chart configuration](https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml)
# @default -- See below
postgresql:
  # -- Switch to enable or disable the PostgreSQL helm chart
  enabled: true

  # -- The authentication details of the Postgres database
  auth:
    # -- Name for a custom user to create
    username: bn_backstage

    # -- Password for the custom user to create
    password: ""

    # -- Name of existing secret to use for PostgreSQL credentials
    existingSecret: ""

    # -- The secret keys Postgres will look for to retrieve the relevant password
    secretKeys:
      # -- The key in which Postgres will look for, for the admin password, in the existing Secret
      adminPasswordKey: admin-password

      # -- The key in which Postgres will look for, for the user password, in the existing Secret
      userPasswordKey: user-password

      # -- The key in which Postgres will look for, for the replication password, in the existing Secret
      replicationPasswordKey: replication-password

  # -- PostgreSQL architecture (`standalone` or `replication`)
  architecture: standalone
